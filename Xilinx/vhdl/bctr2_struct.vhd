-- VHDL Entity BCtr_lib.BCtr2.symbol
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 12:16:48 12/12/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY BCtr2 IS
  GENERIC( 
    FIFO_ADDR_WIDTH : integer range 10 downto 4  := 9;
    N_CHANNELS      : integer range 4 downto 1   := 1;
    CTR_WIDTH       : integer range 32 downto 1  := 16;
    FIFO_WIDTH      : integer range 128 downto 1 := 16
  );
  PORT( 
    En          : IN     std_logic;
    IPS         : IN     std_logic;
    IPnum       : IN     std_logic_vector (5 DOWNTO 0);
    LaserV      : IN     std_logic_vector (15 DOWNTO 0);
    NA          : IN     unsigned (15 DOWNTO 0);
    NBtot       : IN     unsigned (FIFO_ADDR_WIDTH-1 DOWNTO 0);
    PMTs        : IN     std_logic_vector (N_CHANNELS-1 DOWNTO 0);
    RptRE       : IN     std_logic;
    ScanStat    : IN     std_logic_vector (4 DOWNTO 0);
    Trigger     : IN     std_logic;
    clk         : IN     std_logic;
    rst         : IN     std_logic;
    txing       : IN     std_logic;
    DRdy        : OUT    std_logic;
    Expired     : OUT    std_logic;
    IPnumOut    : OUT    std_logic_vector (5 DOWNTO 0);
    LaserVOut   : OUT    std_logic_vector (15 DOWNTO 0);
    NArd        : OUT    std_logic;
    NTriggered  : OUT    std_logic_vector (31 DOWNTO 0);
    NoData      : OUT    std_logic;
    RptData     : OUT    std_logic_vector (FIFO_WIDTH-1 DOWNTO 0);
    ScanStatOut : OUT    std_logic_vector (4 DOWNTO 0);
    TrigArm     : OUT    std_logic
  );

-- Declarations

END ENTITY BCtr2 ;

--
-- VHDL Architecture BCtr_lib.BCtr2.struct
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 12:16:48 12/12/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--

-- Generation properties:
--   Component declarations : yes
--   Configurations         : embedded statements
--                          : add pragmas
--                          : exclude view name
--   
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
-- LIBRARY BCtr_lib;
USE BCtr_lib.ALL;


ARCHITECTURE struct OF BCtr2 IS

  -- Architecture declarations

  -- Internal signal declarations
  SIGNAL CntEn     : std_logic;
  SIGNAL EnA       : std_logic;
  SIGNAL FBEmpty   : std_logic;
  SIGNAL FBFull    : std_logic;
  SIGNAL FBRData   : std_logic_vector(FIFO_WIDTH-1 DOWNTO 0);
  SIGNAL FBRE      : std_logic;
  SIGNAL FBWData   : std_logic_vector(FIFO_WIDTH-1 DOWNTO 0);
  SIGNAL FBWE      : std_logic;
  SIGNAL RptEmpty  : std_logic;
  SIGNAL TrigClr   : std_logic;
  SIGNAL TrigOE    : std_logic;
  SIGNAL TrigSeen  : std_logic;
  SIGNAL first_col : std_logic;
  SIGNAL first_row : std_logic;
  SIGNAL rstA      : std_logic;
  SIGNAL rstB      : std_logic;

  -- Implicit buffer signal declarations
  SIGNAL TrigArm_internal : std_logic;


  -- Component Declarations
  COMPONENT BCtr2Ctrl
  GENERIC (
    FIFO_ADDR_WIDTH : integer range 10 downto 1 := 8
  );
  PORT (
    En          : IN     std_logic ;
    NA          : IN     unsigned (15 DOWNTO 0);
    TrigSeen    : IN     std_logic ;
    clk         : IN     std_logic ;
    rst         : IN     std_logic ;
    CntEn       : OUT    std_logic ;
    DRdy        : OUT    std_logic ;
    TrigArm     : OUT    std_logic ;
    NArd        : OUT    std_logic ;
    TrigClr     : OUT    std_logic ;
    TrigOE      : OUT    std_logic ;
    first_col   : OUT    std_logic ;
    first_row   : OUT    std_logic ;
    FBRE        : OUT    std_logic ;
    EnA         : OUT    std_logic ;
    NTriggered  : OUT    std_logic_vector (31 DOWNTO 0);
    LaserVOut   : OUT    std_logic_vector (15 DOWNTO 0);
    NBtot       : IN     unsigned (FIFO_ADDR_WIDTH-1 DOWNTO 0);
    IPnumOut    : OUT    std_logic_vector (5 DOWNTO 0);
    LaserV      : IN     std_logic_vector (15 DOWNTO 0);
    IPnum       : IN     std_logic_vector (5 DOWNTO 0);
    IPS         : IN     std_logic ;
    FBEmpty     : IN     std_logic ;
    RptEmpty    : IN     std_logic ;
    rstA        : OUT    std_logic ;
    rstB        : OUT    std_logic ;
    FBFull      : IN     std_logic ;
    FBWE        : OUT    std_logic ;
    Expired     : OUT    std_logic ;
    NoData      : OUT    std_logic ;
    txing       : IN     std_logic ;
    ScanStat    : IN     std_logic_vector (4 DOWNTO 0);
    ScanStatOut : OUT    std_logic_vector (4 DOWNTO 0)
  );
  END COMPONENT BCtr2Ctrl;
  COMPONENT BCtrSums
  GENERIC (
    N_CHANNELS : integer range 4 DOWNTO 1  := 1;
    CTR_WIDTH  : integer range 32 DOWNTO 1 := 16
  );
  PORT (
    CntEn     : IN     std_logic;
    CtrData0  : IN     std_logic_vector (N_CHANNELS*CTR_WIDTH-1 DOWNTO 0);
    PMTs      : IN     std_logic_vector (N_CHANNELS-1 DOWNTO 0);
    clk       : IN     std_logic;
    first_col : IN     std_logic;
    first_row : IN     std_logic;
    rst       : IN     std_logic;
    CtrData1  : OUT    std_logic_vector (N_CHANNELS*CTR_WIDTH-1 DOWNTO 0)
  );
  END COMPONENT BCtrSums;
  COMPONENT BitClk
  GENERIC (
    TRIG_POS : boolean := true;
    TRIG_NEG : boolean := true
  );
  PORT (
    CLR    : IN     std_logic;
    OE     : IN     std_logic;
    PMT    : IN     std_logic;
    PMT_EN : IN     std_logic;
    Q      : OUT    std_logic
  );
  END COMPONENT BitClk;
  COMPONENT DualFIFO
  GENERIC (
    FIFO_WIDTH      : integer range 256 downto 1 := 1;
    FIFO_ADDR_WIDTH : integer range 10 downto 1  := 8
  );
  PORT (
    clk      : IN     std_logic ;
    EnA      : IN     std_logic ;
    rstA     : IN     std_logic ;
    rstB     : IN     std_logic ;
    FBEmpty  : OUT    std_logic ;
    FBFull   : OUT    std_logic ;
    FBRE     : IN     std_logic ;
    FBWE     : IN     std_logic ;
    FBWData  : IN     std_logic_vector (FIFO_WIDTH-1 DOWNTO 0);
    FBRData  : OUT    std_logic_vector (FIFO_WIDTH-1 DOWNTO 0);
    RptRE    : IN     std_logic ;
    RptEmpty : OUT    std_logic ;
    RptData  : OUT    std_logic_vector (FIFO_WIDTH-1 DOWNTO 0)
  );
  END COMPONENT DualFIFO;

  -- Optional embedded configurations
  -- pragma synthesis_off
-- FOR ALL : BCtr2Ctrl USE ENTITY BCtr_lib.BCtr2Ctrl;
-- FOR ALL : BCtrSums USE ENTITY BCtr_lib.BCtrSums;
-- FOR ALL : BitClk USE ENTITY BCtr_lib.BitClk;
-- FOR ALL : DualFIFO USE ENTITY BCtr_lib.DualFIFO;
  -- pragma synthesis_on


BEGIN

  -- Instance port mappings.
  CtrCtrl : BCtr2Ctrl
    GENERIC MAP (
      FIFO_ADDR_WIDTH => FIFO_ADDR_WIDTH
    )
    PORT MAP (
      En          => En,
      NA          => NA,
      TrigSeen    => TrigSeen,
      clk         => clk,
      rst         => rst,
      CntEn       => CntEn,
      DRdy        => DRdy,
      TrigArm     => TrigArm_internal,
      NArd        => NArd,
      TrigClr     => TrigClr,
      TrigOE      => TrigOE,
      first_col   => first_col,
      first_row   => first_row,
      FBRE        => FBRE,
      EnA         => EnA,
      NTriggered  => NTriggered,
      LaserVOut   => LaserVOut,
      NBtot       => NBtot,
      IPnumOut    => IPnumOut,
      LaserV      => LaserV,
      IPnum       => IPnum,
      IPS         => IPS,
      FBEmpty     => FBEmpty,
      RptEmpty    => RptEmpty,
      rstA        => rstA,
      rstB        => rstB,
      FBFull      => FBFull,
      FBWE        => FBWE,
      Expired     => Expired,
      NoData      => NoData,
      txing       => txing,
      ScanStat    => ScanStat,
      ScanStatOut => ScanStatOut
    );
  sums : BCtrSums
    GENERIC MAP (
      N_CHANNELS => N_CHANNELS,
      CTR_WIDTH  => CTR_WIDTH
    )
    PORT MAP (
      CntEn     => CntEn,
      CtrData0  => FBRData,
      PMTs      => PMTs,
      clk       => clk,
      first_col => first_col,
      first_row => first_row,
      rst       => rst,
      CtrData1  => FBWData
    );
  trig : BitClk
    GENERIC MAP (
      TRIG_POS => true,
      TRIG_NEG => false
    )
    PORT MAP (
      PMT    => Trigger,
      PMT_EN => TrigArm_internal,
      OE     => TrigOE,
      CLR    => TrigClr,
      Q      => TrigSeen
    );
  FIFOs : DualFIFO
    GENERIC MAP (
      FIFO_WIDTH      => FIFO_WIDTH,
      FIFO_ADDR_WIDTH => FIFO_ADDR_WIDTH
    )
    PORT MAP (
      clk      => clk,
      EnA      => EnA,
      rstA     => rstA,
      rstB     => rstB,
      FBEmpty  => FBEmpty,
      FBFull   => FBFull,
      FBRE     => FBRE,
      FBWE     => FBWE,
      FBWData  => FBWData,
      FBRData  => FBRData,
      RptRE    => RptRE,
      RptEmpty => RptEmpty,
      RptData  => RptData
    );

  -- Implicit buffered output assignments
  TrigArm <= TrigArm_internal;

END ARCHITECTURE struct;

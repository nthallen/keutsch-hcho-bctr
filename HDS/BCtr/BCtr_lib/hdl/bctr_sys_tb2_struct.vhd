-- VHDL Entity BCtr_lib.BCtr_sys_tb2.symbol
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 11:13:32 01/23/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;



ENTITY BCtr_sys_tb2 IS
  GENERIC( 
    ADDR_WIDTH      : integer range 16 downto 8      := 8;
    N_CHANNELS      : integer range 4 downto 1       := 1;
    CTR_WIDTH       : integer range 32 downto 1      := 16;
    FIFO_ADDR_WIDTH : integer range 10 downto 4      := 7;
    N_BOARDS        : integer range 10 downto 1      := 1;
    FAIL_WIDTH      : integer range 16 downto 0      := 2;
    SW_WIDTH        : integer range 16 downto 0      := 0;
    N_INTERRUPTS    : integer range 16 downto 0      := 0;
    SIM_LOOPS       : integer range 50 downto 0      := 10;
    BIN_OPT         : integer range 10 downto 1      := 2;
    NC              : integer range 2**24-1 downto 1 := 3000
  );
-- Declarations

END ENTITY BCtr_sys_tb2 ;

--
-- VHDL Architecture BCtr_lib.BCtr_sys_tb2.struct
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 11:13:32 01/23/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--

-- Generation properties:
--   Component declarations : yes
--   Configurations         : embedded statements
--                          : add pragmas
--                          : exclude view name
--   
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;
LIBRARY std;
USE std.textio.all;
USE ieee.std_logic_textio.all;

LIBRARY BCtr_lib;

ARCHITECTURE struct OF BCtr_sys_tb2 IS

  -- Architecture declarations

  -- Internal signal declarations
  SIGNAL Addr          : std_logic_vector(ADDR_WIDTH-1 DOWNTO 0);
  SIGNAL Ctrl          : std_logic_vector(6 DOWNTO 0);
  SIGNAL Data_i        : std_logic_vector(15 DOWNTO 0);
  SIGNAL Data_o        : std_logic_vector(15 DOWNTO 0);
  SIGNAL Fail_Out      : std_logic_vector(FAIL_WIDTH-1 DOWNTO 0);
  SIGNAL Flt_CPU_Reset : std_logic;
  SIGNAL PMTs          : std_logic_vector(N_CHANNELS-1 DOWNTO 0);
  SIGNAL Status        : std_logic_vector(3 DOWNTO 0);
  SIGNAL Switches      : std_logic_vector(SW_WIDTH-1 DOWNTO 0);
  SIGNAL Trigger       : std_logic;
  SIGNAL clk           : std_logic;


  -- Component Declarations
  COMPONENT BCtr_sys
  GENERIC (
    ADDR_WIDTH      : integer range 16 downto 8 := 8;
    N_CHANNELS      : integer range 4 downto 1  := 1;
    CTR_WIDTH       : integer range 32 downto 1 := 16;
    FIFO_ADDR_WIDTH : integer range 10 downto 4 := 9;
    N_BOARDS        : integer range 10 downto 1 := 1;
    FAIL_WIDTH      : integer range 16 downto 0 := 2;
    SW_WIDTH        : integer range 16 downto 0 := 1;
    N_INTERRUPTS    : integer range 16 downto 0 := 1
  );
  PORT (
    Addr          : IN     std_logic_vector (ADDR_WIDTH-1 DOWNTO 0);
    Ctrl          : IN     std_logic_vector (6 DOWNTO 0);
    Data_o        : IN     std_logic_vector (15 DOWNTO 0);
    PMTs          : IN     std_logic_vector (N_CHANNELS-1 DOWNTO 0);
    Switches      : IN     std_logic_vector (SW_WIDTH-1 DOWNTO 0);
    Trigger       : IN     std_logic ;
    clk           : IN     std_logic ;
    Data_i        : OUT    std_logic_vector (15 DOWNTO 0);
    Fail_Out      : OUT    std_logic_vector (FAIL_WIDTH-1 DOWNTO 0);
    Flt_CPU_Reset : OUT    std_logic ;
    Status        : OUT    std_logic_vector (3 DOWNTO 0)
  );
  END COMPONENT BCtr_sys;
  COMPONENT BCtr_sys_tester
  GENERIC (
    ADDR_WIDTH : integer range 16 downto 8      := 8;
    N_CHANNELS : integer range 4 downto 1       := 1;
    CTR_WIDTH  : integer range 32 downto 1      := 16;
    FAIL_WIDTH : integer range 16 downto 0      := 2;
    SW_WIDTH   : integer range 16 downto 0      := 1;
    BIN_OPT    : integer range 10 downto 1      := 1;
    SIM_LOOPS  : integer range 50 downto 0      := 20;
    NC         : integer range 2**24-1 downto 0 := 3000
  );
  PORT (
    Data_i        : IN     std_logic_vector (15 DOWNTO 0);
    Fail_Out      : IN     std_logic_vector (FAIL_WIDTH-1 DOWNTO 0);
    Flt_CPU_Reset : IN     std_logic ;
    Status        : IN     std_logic_vector (3 DOWNTO 0);
    Addr          : OUT    std_logic_vector (ADDR_WIDTH-1 DOWNTO 0);
    Ctrl          : OUT    std_logic_vector (6 DOWNTO 0);
    Data_o        : OUT    std_logic_vector (15 DOWNTO 0);
    PMTs          : OUT    std_logic_vector (N_CHANNELS-1 DOWNTO 1);
    Switches      : OUT    std_logic_vector (SW_WIDTH-1 DOWNTO 0);
    clk           : OUT    std_logic 
  );
  END COMPONENT BCtr_sys_tester;
  COMPONENT simfluor
  GENERIC (
    TRIGCNT_WIDTH  : integer range 15 downto 6       := 9;
    TRIG_PERIOD    : integer range 100000 downto 100 := 333;
    PULSECNT_WIDTH : integer range 16 downto 4       := 9
  );
  PORT (
    clk     : IN     std_logic;
    rst     : IN     std_logic;
    PMT     : OUT    std_logic;
    Trigger : OUT    std_logic
  );
  END COMPONENT simfluor;

  -- Optional embedded configurations
  -- pragma synthesis_off
  FOR ALL : BCtr_sys USE ENTITY BCtr_lib.BCtr_sys;
  FOR ALL : BCtr_sys_tester USE ENTITY BCtr_lib.BCtr_sys_tester;
  FOR ALL : simfluor USE ENTITY BCtr_lib.simfluor;
  -- pragma synthesis_on


BEGIN

  -- Instance port mappings.
  U_0 : BCtr_sys
    GENERIC MAP (
      ADDR_WIDTH      => ADDR_WIDTH,
      N_CHANNELS      => N_CHANNELS,
      CTR_WIDTH       => CTR_WIDTH,
      FIFO_ADDR_WIDTH => FIFO_ADDR_WIDTH,
      N_BOARDS        => 1,
      FAIL_WIDTH      => 2,
      SW_WIDTH        => 0,
      N_INTERRUPTS    => 0
    )
    PORT MAP (
      Addr          => Addr,
      Ctrl          => Ctrl,
      Data_o        => Data_o,
      PMTs          => PMTs,
      Switches      => Switches,
      Trigger       => Trigger,
      clk           => clk,
      Data_i        => Data_i,
      Fail_Out      => Fail_Out,
      Flt_CPU_Reset => Flt_CPU_Reset,
      Status        => Status
    );
  U_1 : BCtr_sys_tester
    GENERIC MAP (
      ADDR_WIDTH => ADDR_WIDTH,
      N_CHANNELS => N_CHANNELS,
      CTR_WIDTH  => CTR_WIDTH,
      FAIL_WIDTH => FAIL_WIDTH,
      SW_WIDTH   => SW_WIDTH,
      BIN_OPT    => BIN_OPT,
      SIM_LOOPS  => SIM_LOOPS,
      NC         => NC
    )
    PORT MAP (
      Data_i        => Data_i,
      Fail_Out      => Fail_Out,
      Flt_CPU_Reset => Flt_CPU_Reset,
      Status        => Status,
      Addr          => Addr,
      Ctrl          => Ctrl,
      Data_o        => Data_o,
      PMTs          => PMTs(N_CHANNELS-1 DOWNTO 1),
      Switches      => Switches,
      clk           => clk
    );
  U_2 : simfluor
    GENERIC MAP (
      TRIGCNT_WIDTH  => 9,
      TRIG_PERIOD    => 333,
      PULSECNT_WIDTH => 9
    )
    PORT MAP (
      Trigger => Trigger,
      PMT     => PMTs(0),
      clk     => clk,
      rst     => Ctrl(4)
    );

END ARCHITECTURE struct;

-- VHDL Entity BCtr_lib.temp_acquire_tb.symbol
--
-- Created:
--          by - nort.Domain Users (NORT-XPS14)
--          at - 22:30:35 05/04/15
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;



ENTITY temp_acquire_tb IS
-- Declarations

END ENTITY temp_acquire_tb ;

--
-- VHDL Architecture BCtr_lib.temp_acquire_tb.struct
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 21:49:49 02/ 7/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--

-- Generation properties:
--   Component declarations : yes
--   Configurations         : embedded statements
--                          : add pragmas
--                          : exclude view name
--   
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_arith.ALL;

LIBRARY BCtr_lib;

ARCHITECTURE struct OF temp_acquire_tb IS

  -- Architecture declarations

  -- Internal signal declarations
  SIGNAL RE        : std_logic;
  SIGNAL WE        : std_logic;
  SIGNAL ack       : std_logic;
  SIGNAL brd_num   : std_logic_vector(2 DOWNTO 0);
  SIGNAL clk       : std_logic;
  SIGNAL en        : std_logic;
  SIGNAL rd_data_o : std_logic_vector(31 DOWNTO 0);
  SIGNAL rdata     : std_logic_vector(7 DOWNTO 0);
  SIGNAL rdy       : std_logic;
  SIGNAL rst       : std_logic;
  SIGNAL scl       : std_logic;
  SIGNAL sda       : std_logic;
  SIGNAL start     : std_ulogic;
  SIGNAL wdata     : std_ulogic_vector(7 DOWNTO 0);


  -- Component Declarations
  COMPONENT i2c_slave
  GENERIC (
    I2C_ADDR : std_logic_vector(6 DOWNTO 0) := "1000000"
  );
  PORT (
    clk   : IN     std_ulogic;
    en    : IN     std_logic;
    rdata : IN     std_logic_vector (7 DOWNTO 0);
    rst   : IN     std_ulogic;
    scl   : IN     std_logic;
    WE    : OUT    std_logic;
    rdreq : OUT    std_logic;
    start : OUT    std_ulogic;
    stop  : OUT    std_ulogic;
    wdata : OUT    std_ulogic_vector (7 DOWNTO 0);
    RE    : INOUT  std_logic;
    sda   : INOUT  std_logic
  );
  END COMPONENT i2c_slave;
  COMPONENT temp_acquire
  PORT (
    ack       : IN     std_logic ;
    clk       : IN     std_logic ;
    rst       : IN     std_logic ;
    brd_num   : OUT    std_logic_vector (2 DOWNTO 0);
    rd_data_o : OUT    std_logic_vector (31 DOWNTO 0);
    rdy       : OUT    std_logic ;
    scl       : INOUT  std_logic ;
    sda       : INOUT  std_logic 
  );
  END COMPONENT temp_acquire;
  COMPONENT temp_acquire_tester
  PORT (
    WE        : IN     std_logic ;
    brd_num   : IN     std_logic_vector (2 DOWNTO 0);
    rd_data_o : IN     std_logic_vector (31 DOWNTO 0);
    rdy       : IN     std_logic ;
    start     : IN     std_ulogic ;
    wdata     : IN     std_ulogic_vector (7 DOWNTO 0);
    RE        : OUT    std_logic ;
    ack       : OUT    std_logic ;
    clk       : OUT    std_logic ;
    en        : OUT    std_logic ;
    rdata     : OUT    std_logic_vector (7 DOWNTO 0);
    rst       : OUT    std_logic ;
    scl       : INOUT  std_logic ;
    sda       : INOUT  std_logic 
  );
  END COMPONENT temp_acquire_tester;

  -- Optional embedded configurations
  -- pragma synthesis_off
  FOR ALL : i2c_slave USE ENTITY BCtr_lib.i2c_slave;
  FOR ALL : temp_acquire USE ENTITY BCtr_lib.temp_acquire;
  FOR ALL : temp_acquire_tester USE ENTITY BCtr_lib.temp_acquire_tester;
  -- pragma synthesis_on


BEGIN

  -- Instance port mappings.
  slave : i2c_slave
    GENERIC MAP (
      I2C_ADDR => "0010100"
    )
    PORT MAP (
      clk   => clk,
      rdata => rdata,
      rst   => rst,
      scl   => scl,
      en    => en,
      WE    => WE,
      start => start,
      stop  => OPEN,
      wdata => wdata,
      rdreq => OPEN,
      RE    => RE,
      sda   => sda
    );
  dut : temp_acquire
    PORT MAP (
      ack       => ack,
      clk       => clk,
      rst       => rst,
      brd_num   => brd_num,
      rd_data_o => rd_data_o,
      rdy       => rdy,
      scl       => scl,
      sda       => sda
    );
  tester : temp_acquire_tester
    PORT MAP (
      WE        => WE,
      brd_num   => brd_num,
      rd_data_o => rd_data_o,
      rdy       => rdy,
      start     => start,
      wdata     => wdata,
      RE        => RE,
      ack       => ack,
      clk       => clk,
      en        => en,
      rdata     => rdata,
      rst       => rst,
      scl       => scl,
      sda       => sda
    );

END ARCHITECTURE struct;

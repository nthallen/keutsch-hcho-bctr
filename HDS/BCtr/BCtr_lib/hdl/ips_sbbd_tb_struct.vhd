-- VHDL Entity BCtr_lib.ips_sbbd_tb.symbol
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 08:43:59 11/10/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;



ENTITY ips_sbbd_tb IS
  GENERIC( 
    ADDR_WIDTH : integer range 16 downto 8 := 8
  );
-- Declarations

END ENTITY ips_sbbd_tb ;

--
-- VHDL Architecture BCtr_lib.ips_sbbd_tb.struct
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 15:49:15 11/11/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--

-- Generation properties:
--   Component declarations : yes
--   Configurations         : embedded statements
--                          : add pragmas
--                          : exclude view name
--   
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;

LIBRARY BCtr_lib;

ARCHITECTURE struct OF ips_sbbd_tb IS

  -- Architecture declarations

  -- Internal signal declarations
  SIGNAL ExpAck   : std_logic;
  SIGNAL ExpAck1  : std_logic;
  SIGNAL ExpAddr  : std_logic_vector(ADDR_WIDTH-1 DOWNTO 0);
  SIGNAL ExpRd    : std_logic;
  SIGNAL ExpReset : std_logic;
  SIGNAL ExpWr    : std_logic;
  SIGNAL IPS      : std_logic;
  SIGNAL IPnum    : std_logic_vector(5 DOWNTO 0);
  SIGNAL PPS      : std_logic;
  SIGNAL RData    : std_logic_vector(15 DOWNTO 0);
  SIGNAL RData1   : std_logic_vector(15 DOWNTO 0);
  SIGNAL WData    : std_logic_vector(15 DOWNTO 0);
  SIGNAL clk      : std_logic;


  -- Component Declarations
  COMPONENT ips_sbbd
  GENERIC (
    ADDR_WIDTH : integer range 16 downto 8 := 8;
    BASE_ADDR  : unsigned(15 DOWNTO 0)     := x"0070"
  );
  PORT (
    ExpAddr  : IN     std_logic_vector (ADDR_WIDTH-1 DOWNTO 0);
    ExpRd    : IN     std_logic ;
    ExpReset : IN     std_logic ;
    ExpWr    : IN     std_logic ;
    PPS      : IN     std_logic ;
    WData    : IN     std_logic_vector (15 DOWNTO 0);
    clk      : IN     std_logic ;
    ExpAck   : OUT    std_logic ;
    IPS      : OUT    std_logic ;
    IPnum    : OUT    std_logic_vector (5 DOWNTO 0);
    RData    : OUT    std_logic_vector (15 DOWNTO 0)
  );
  END COMPONENT ips_sbbd;
  COMPONENT ips_sbbd_tester
  GENERIC (
    ADDR_WIDTH : integer range 16 downto 8 := 8
  );
  PORT (
    ExpAck   : IN     std_logic ;
    ExpAck1  : IN     std_logic ;
    IPS      : IN     std_logic ;
    RData    : IN     std_logic_vector (15 DOWNTO 0);
    ExpAddr  : OUT    std_logic_vector (ADDR_WIDTH-1 DOWNTO 0);
    ExpRd    : OUT    std_logic ;
    ExpReset : OUT    std_logic ;
    ExpWr    : OUT    std_logic ;
    WData    : OUT    std_logic_vector (15 DOWNTO 0);
    clk      : OUT    std_logic ;
    PPS      : IN     std_logic 
  );
  END COMPONENT ips_sbbd_tester;
  COMPONENT pps_sbbd
  GENERIC (
    ADDR_WIDTH : integer range 16 downto 8 := 8;
    BASE_ADDR  : unsigned(15 downto 0)     := x"0060";
    CLK_FREQ   : unsigned(31 downto 0)     := to_unsigned(100000000,32);
    MSW_SHIFT  : integer range 16 downto 0 := 11
  );
  PORT (
    ExpAddr  : IN     std_logic_vector (ADDR_WIDTH-1 DOWNTO 0);
    ExpRd    : IN     std_logic ;
    ExpReset : IN     std_logic ;
    ExpWr    : IN     std_logic ;
    WData    : IN     std_logic_vector (15 DOWNTO 0);
    clk      : IN     std_logic ;
    ExpAck   : OUT    std_logic ;
    PPS      : OUT    std_logic ;
    RData    : OUT    std_logic_vector (15 DOWNTO 0)
  );
  END COMPONENT pps_sbbd;

  -- Optional embedded configurations
  -- pragma synthesis_off
  FOR ALL : ips_sbbd USE ENTITY BCtr_lib.ips_sbbd;
  FOR ALL : ips_sbbd_tester USE ENTITY BCtr_lib.ips_sbbd_tester;
  FOR ALL : pps_sbbd USE ENTITY BCtr_lib.pps_sbbd;
  -- pragma synthesis_on


BEGIN

  -- Instance port mappings.
  ips_bd : ips_sbbd
    GENERIC MAP (
      ADDR_WIDTH => 8
    )
    PORT MAP (
      ExpAddr  => ExpAddr,
      ExpRd    => ExpRd,
      ExpReset => ExpReset,
      ExpWr    => ExpWr,
      PPS      => PPS,
      WData    => WData,
      clk      => clk,
      ExpAck   => ExpAck,
      IPS      => IPS,
      IPnum    => IPnum,
      RData    => RData
    );
  tester : ips_sbbd_tester
    GENERIC MAP (
      ADDR_WIDTH => 8
    )
    PORT MAP (
      ExpAck   => ExpAck,
      ExpAck1  => ExpAck1,
      IPS      => IPS,
      RData    => RData,
      ExpAddr  => ExpAddr,
      ExpRd    => ExpRd,
      ExpReset => ExpReset,
      ExpWr    => ExpWr,
      WData    => WData,
      clk      => clk,
      PPS      => PPS
    );
  pps_bd : pps_sbbd
    GENERIC MAP (
      ADDR_WIDTH => 8,
      BASE_ADDR  => x"0060",
      CLK_FREQ   => to_unsigned(100000000,32),
      MSW_SHIFT  => 11
    )
    PORT MAP (
      ExpAddr  => ExpAddr,
      ExpRd    => ExpRd,
      ExpReset => ExpReset,
      ExpWr    => ExpWr,
      WData    => WData,
      clk      => clk,
      ExpAck   => ExpAck1,
      PPS      => PPS,
      RData    => RData1
    );

END ARCHITECTURE struct;

-- VHDL Entity BCtr_lib.BCtr.symbol
--
-- Created:
--          by - nort.Domain Users (NORT-XPS14)
--          at - 11:43:47 10/21/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1b (Build 2)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY BCtr IS
   GENERIC( 
      FIFO_WIDTH      : integer range 32 downto 1 := 16;
      FIFO_ADDR_WIDTH : integer range 10 downto 4 := 9
   );
   PORT( 
      En      : IN     std_logic;
      NA      : IN     std_logic_vector (15 DOWNTO 0);
      NB      : IN     std_logic_vector (FIFO_ADDR_WIDTH-1 DOWNTO 0);
      NC      : IN     std_logic_vector (15 DOWNTO 0);
      PMT     : IN     std_logic;
      RE      : IN     std_logic;
      Trigger : IN     std_logic;
      clk     : IN     std_logic;
      rst     : IN     std_logic;
      DRdy    : OUT    std_logic;
      RData   : OUT    std_logic_vector (FIFO_WIDTH-1 DOWNTO 0)
   );

-- Declarations

END BCtr ;

--
-- VHDL Architecture BCtr_lib.BCtr.struct
--
-- Created:
--          by - nort.Domain Users (NORT-XPS14)
--          at - 11:43:47 10/21/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1b (Build 2)
--

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_unsigned.all;

LIBRARY BCtr_lib;

ARCHITECTURE struct OF BCtr IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL CData0    : std_logic_vector(FIFO_WIDTH-1 DOWNTO 0);
   SIGNAL CData1    : std_logic_vector(FIFO_WIDTH-1 DOWNTO 0);
   SIGNAL CntEn     : std_logic;
   SIGNAL Empty1    : std_logic;
   SIGNAL Empty2    : std_logic;
   SIGNAL Full1     : std_logic;
   SIGNAL Full2     : std_logic;
   SIGNAL RE1       : std_logic;
   SIGNAL SIG       : std_logic;
   SIGNAL TrigArm   : std_logic;
   SIGNAL TrigClr   : std_logic;
   SIGNAL TrigOE    : std_logic;
   SIGNAL TrigSeen  : std_logic;
   SIGNAL WE1       : std_logic;
   SIGNAL WE2       : std_logic;
   SIGNAL first_col : std_logic;
   SIGNAL first_row : std_logic;


   -- Component Declarations
   COMPONENT BCtrCtrl
   GENERIC (
      FIFO_ADDR_WIDTH : integer range 10 downto 1 := 8
   );
   PORT (
      Empty1    : IN     std_logic;
      Empty2    : IN     std_logic;
      En        : IN     std_logic;
      Full1     : IN     std_logic;
      NA        : IN     std_logic_vector (15 DOWNTO 0);
      NB        : IN     std_logic_vector (FIFO_ADDR_WIDTH-1 DOWNTO 0);
      NC        : IN     std_logic_vector (15 DOWNTO 0);
      TrigSeen  : IN     std_logic;
      clk       : IN     std_logic;
      rst       : IN     std_logic;
      CntEn     : OUT    std_logic;
      DRdy      : OUT    std_logic;
      RE1       : OUT    std_logic;
      TrigArm   : OUT    std_logic;
      TrigClr   : OUT    std_logic;
      TrigOE    : OUT    std_logic;
      WE1       : OUT    std_logic;
      WE2       : OUT    std_logic;
      first_col : OUT    std_logic;
      first_row : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT BCtrSum
   GENERIC (
      FIFO_WIDTH : integer range 32 downto 1 := 16
   );
   PORT (
      CData0    : IN     std_logic_vector (FIFO_WIDTH-1 DOWNTO 0);
      CntEn     : IN     std_logic ;
      SIG       : IN     std_logic ;
      clk       : IN     std_logic ;
      first_col : IN     std_logic ;
      first_row : IN     std_logic ;
      rst       : IN     std_logic ;
      CData1    : OUT    std_logic_vector (FIFO_WIDTH-1 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT BitClk
   PORT (
      CLR    : IN     std_logic;
      OE     : IN     std_logic;
      PMT    : IN     std_logic;
      PMT_EN : IN     std_logic;
      Q      : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT FIFO
   GENERIC (
      FIFO_WIDTH      : integer range 32 downto 1 := 1;
      FIFO_ADDR_WIDTH : integer range 10 downto 1 := 8
   );
   PORT (
      Clk   : IN     std_ulogic;
      RE    : IN     std_logic;
      Rst   : IN     std_logic;
      WData : IN     std_logic_vector (FIFO_WIDTH-1 DOWNTO 0);
      WE    : IN     std_logic;
      Empty : OUT    std_logic;
      Full  : OUT    std_logic;
      RData : OUT    std_logic_vector (FIFO_WIDTH-1 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT PMT_Input
   PORT (
      PMT : IN     std_logic ;
      clk : IN     std_logic ;
      rst : IN     std_logic ;
      SIG : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : BCtrCtrl USE ENTITY BCtr_lib.BCtrCtrl;
   FOR ALL : BCtrSum USE ENTITY BCtr_lib.BCtrSum;
   FOR ALL : BitClk USE ENTITY BCtr_lib.BitClk;
   FOR ALL : FIFO USE ENTITY BCtr_lib.FIFO;
   FOR ALL : PMT_Input USE ENTITY BCtr_lib.PMT_Input;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_1 : BCtrCtrl
      GENERIC MAP (
         FIFO_ADDR_WIDTH => FIFO_ADDR_WIDTH
      )
      PORT MAP (
         Empty1    => Empty1,
         Empty2    => Empty2,
         En        => En,
         Full1     => Full1,
         NA        => NA,
         NC        => NC,
         NB        => NB,
         TrigSeen  => TrigSeen,
         clk       => clk,
         rst       => rst,
         CntEn     => CntEn,
         DRdy      => DRdy,
         RE1       => RE1,
         TrigArm   => TrigArm,
         TrigClr   => TrigClr,
         TrigOE    => TrigOE,
         WE1       => WE1,
         WE2       => WE2,
         first_col => first_col,
         first_row => first_row
      );
   U_2 : BCtrSum
      GENERIC MAP (
         FIFO_WIDTH => 16
      )
      PORT MAP (
         CData0    => CData0,
         CntEn     => CntEn,
         SIG       => SIG,
         clk       => clk,
         first_col => first_col,
         first_row => first_row,
         rst       => rst,
         CData1    => CData1
      );
   U_3 : BitClk
      PORT MAP (
         PMT    => Trigger,
         PMT_EN => TrigArm,
         OE     => TrigOE,
         CLR    => TrigClr,
         Q      => TrigSeen
      );
   U_4 : FIFO
      GENERIC MAP (
         FIFO_WIDTH      => FIFO_WIDTH,
         FIFO_ADDR_WIDTH => FIFO_ADDR_WIDTH
      )
      PORT MAP (
         WData => CData1,
         WE    => WE1,
         RE    => RE1,
         Clk   => clk,
         Rst   => rst,
         RData => CData0,
         Empty => Empty1,
         Full  => Full1
      );
   U_5 : FIFO
      GENERIC MAP (
         FIFO_WIDTH      => 16,
         FIFO_ADDR_WIDTH => 9
      )
      PORT MAP (
         WData => CData1,
         WE    => WE2,
         RE    => RE,
         Clk   => clk,
         Rst   => rst,
         RData => RData,
         Empty => Empty2,
         Full  => Full2
      );
   U_0 : PMT_Input
      PORT MAP (
         PMT => PMT,
         clk => clk,
         rst => rst,
         SIG => SIG
      );

END struct;
